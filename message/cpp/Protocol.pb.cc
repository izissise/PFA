// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Protocol_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Protocol_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Protocol_2eproto() {
  protobuf_AddDesc_Protocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Protocol.proto");
  GOOGLE_CHECK(file != NULL);
  Protocol_descriptor_ = file->message_type(0);
  static const int Protocol_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Protocol, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Protocol, player_),
  };
  Protocol_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Protocol_descriptor_,
      Protocol::default_instance_,
      Protocol_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Protocol, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Protocol, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Protocol));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Protocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Protocol_descriptor_, &Protocol::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Protocol_2eproto() {
  delete Protocol::default_instance_;
  delete Protocol_reflection_;
}

void protobuf_AddDesc_Protocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Player_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Protocol.proto\032\014Player.proto\"3\n\010Protoc"
    "ol\022\016\n\006action\030\001 \002(\005\022\027\n\006player\030\002 \001(\0132\007.Pla"
    "yer", 83);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Protocol.proto", &protobuf_RegisterTypes);
  Protocol::default_instance_ = new Protocol();
  Protocol::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Protocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Protocol_2eproto {
  StaticDescriptorInitializer_Protocol_2eproto() {
    protobuf_AddDesc_Protocol_2eproto();
  }
} static_descriptor_initializer_Protocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Protocol::kActionFieldNumber;
const int Protocol::kPlayerFieldNumber;
#endif  // !_MSC_VER

Protocol::Protocol()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol)
}

void Protocol::InitAsDefaultInstance() {
  player_ = const_cast< ::Player*>(&::Player::default_instance());
}

Protocol::Protocol(const Protocol& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Protocol)
}

void Protocol::SharedCtor() {
  _cached_size_ = 0;
  action_ = 0;
  player_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Protocol::~Protocol() {
  // @@protoc_insertion_point(destructor:Protocol)
  SharedDtor();
}

void Protocol::SharedDtor() {
  if (this != default_instance_) {
    delete player_;
  }
}

void Protocol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Protocol::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Protocol_descriptor_;
}

const Protocol& Protocol::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Protocol_2eproto();
  return *default_instance_;
}

Protocol* Protocol::default_instance_ = NULL;

Protocol* Protocol::New() const {
  return new Protocol;
}

void Protocol::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    action_ = 0;
    if (has_player()) {
      if (player_ != NULL) player_->::Player::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Protocol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 action = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
          set_has_action();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_player;
        break;
      }

      // optional .Player player = 2;
      case 2: {
        if (tag == 18) {
         parse_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol)
  return false;
#undef DO_
}

void Protocol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol)
  // required int32 action = 1;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->action(), output);
  }

  // optional .Player player = 2;
  if (has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol)
}

::google::protobuf::uint8* Protocol::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol)
  // required int32 action = 1;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->action(), target);
  }

  // optional .Player player = 2;
  if (has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->player(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol)
  return target;
}

int Protocol::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 action = 1;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

    // optional .Player player = 2;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Protocol::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Protocol* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Protocol*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Protocol::MergeFrom(const Protocol& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_action()) {
      set_action(from.action());
    }
    if (from.has_player()) {
      mutable_player()->::Player::MergeFrom(from.player());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Protocol::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Protocol::CopyFrom(const Protocol& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Protocol::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Protocol::Swap(Protocol* other) {
  if (other != this) {
    std::swap(action_, other->action_);
    std::swap(player_, other->player_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Protocol::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Protocol_descriptor_;
  metadata.reflection = Protocol_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
